/**
 * Neumorphism Chart Styles
 * Specific styling for family chart elements
 */

/* Import base neumorphism styles */
@import './neumorphism-base.css';

/* Chart Container - Maximized for Optimal Space Usage */
.chart-container {
    background: var(--neu-bg);
    border-radius: var(--neu-radius-lg);
    box-shadow: var(--neu-shadow-inset);
    padding: 16px;
    margin: 8px auto;
    max-width: 100%;
    min-height: calc(100vh - 200px); /* Maximize vertical space */
    position: relative;
    overflow: visible;
}

/* Enhanced Family Chart Person Nodes with Advanced Neumorphism */
.family-chart .person-node,
.family-chart [data-d3fc-group="person"] .node,
.family-chart .node {
    background: var(--neu-surface) !important;
    border: none !important;
    border-radius: var(--neu-radius-lg) !important;
    padding: 18px !important;
    min-width: 160px !important;
    min-height: 140px !important;
    box-shadow: 
        8px 8px 16px var(--neu-shadow-dark),
        -8px -8px 16px var(--neu-shadow-light),
        inset 1px 1px 2px rgba(255, 255, 255, 0.1) !important;
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1) !important;
    cursor: pointer !important;
    position: relative !important;
    overflow: visible !important;
    backdrop-filter: blur(10px) !important;
    transform-style: preserve-3d !important;
}

/* Enhanced Gender-based styling with gradients and subtle patterns */
.family-chart .person-node[data-gender="M"],
.family-chart [data-gender="M"] .node,
.family-chart .node[data-gender="M"] {
    background: linear-gradient(145deg, #e8eaf0, #f2f4fa) !important;
    border-left: 5px solid var(--neu-male) !important;
    box-shadow: 
        8px 8px 16px var(--neu-shadow-dark),
        -8px -8px 16px var(--neu-shadow-light),
        inset 1px 1px 2px rgba(79, 172, 254, 0.1) !important;
}

.family-chart .person-node[data-gender="F"],
.family-chart [data-gender="F"] .node,
.family-chart .node[data-gender="F"] {
    background: linear-gradient(145deg, #f0e8f0, #faf2fa) !important;
    border-left: 5px solid var(--neu-female) !important;
    box-shadow: 
        8px 8px 16px var(--neu-shadow-dark),
        -8px -8px 16px var(--neu-shadow-light),
        inset 1px 1px 2px rgba(240, 147, 251, 0.1) !important;
}

.family-chart .person-node[data-gender="Male"],
.family-chart [data-gender="Male"] .node,
.family-chart .node[data-gender="Male"] {
    background: linear-gradient(145deg, #e8eaf0, #f2f4fa) !important;
    border-left: 5px solid var(--neu-male) !important;
    box-shadow: 
        8px 8px 16px var(--neu-shadow-dark),
        -8px -8px 16px var(--neu-shadow-light),
        inset 1px 1px 2px rgba(79, 172, 254, 0.1) !important;
}

.family-chart .person-node[data-gender="Female"],
.family-chart [data-gender="Female"] .node,
.family-chart .node[data-gender="Female"] {
    background: linear-gradient(145deg, #f0e8f0, #faf2fa) !important;
    border-left: 5px solid var(--neu-female) !important;
    box-shadow: 
        8px 8px 16px var(--neu-shadow-dark),
        -8px -8px 16px var(--neu-shadow-light),
        inset 1px 1px 2px rgba(240, 147, 251, 0.1) !important;
}

/* Enhanced Avatar styling with multiple layers and effects */
.family-chart .person-avatar,
.family-chart .node img,
.family-chart img {
    width: 70px !important;
    height: 70px !important;
    border-radius: 50% !important;
    margin: 0 auto 12px !important;
    box-shadow: 
        inset 4px 4px 8px var(--neu-shadow-dark),
        inset -4px -4px 8px var(--neu-shadow-light),
        0 4px 8px rgba(0, 0, 0, 0.1) !important;
    overflow: hidden !important;
    display: block !important;
    border: 3px solid var(--neu-surface) !important;
    transition: all 0.3s ease !important;
    position: relative !important;
}

/* Avatar hover effect */
.family-chart .person-node:hover .person-avatar,
.family-chart .node:hover img {
    transform: scale(1.05) !important;
    box-shadow: 
        inset 4px 4px 8px var(--neu-shadow-dark),
        inset -4px -4px 8px var(--neu-shadow-light),
        0 6px 12px rgba(0, 0, 0, 0.15) !important;
}

/* Avatar placeholder for nodes without images */
.family-chart .person-avatar:empty::before,
.family-chart .node img[src=""]:before {
    content: "ðŸ‘¤";
    font-size: 32px;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
    color: var(--neu-text-light);
    background: linear-gradient(145deg, var(--neu-surface), #f5f6fa);
}

/* Enhanced text styling with better hierarchy */
.family-chart .person-name,
.family-chart .node .name,
.family-chart .name {
    font-weight: 700 !important;
    color: var(--neu-text) !important;
    font-size: 15px !important;
    text-align: center !important;
    margin-bottom: 6px !important;
    text-shadow: 
        1px 1px 2px rgba(255, 255, 255, 0.8),
        0 0 1px rgba(255, 255, 255, 0.5) !important;
    line-height: 1.3 !important;
    letter-spacing: 0.3px !important;
    word-wrap: break-word !important;
    max-width: 100% !important;
}

.family-chart .person-details,
.family-chart .node .details,
.family-chart .details {
    font-size: 11px !important;
    color: var(--neu-text-secondary) !important;
    text-align: center !important;
    line-height: 1.4 !important;
    text-shadow: 1px 1px 1px rgba(255, 255, 255, 0.6) !important;
    margin-top: 6px !important;
    opacity: 0.9 !important;
    font-weight: 500 !important;
    word-wrap: break-word !important;
    max-width: 100% !important;
}

/* Additional info styling */
.family-chart .person-info,
.family-chart .node .info {
    font-size: 10px !important;
    color: var(--neu-text-light) !important;
    text-align: center !important;
    margin-top: 4px !important;
    opacity: 0.7 !important;
    font-style: italic !important;
}

/* Advanced hover and interaction states with micro-animations */
.family-chart .person-node:hover,
.family-chart .node:hover {
    transform: translateY(-3px) scale(1.02) !important;
    box-shadow: 
        12px 12px 24px var(--neu-shadow-dark),
        -12px -12px 24px var(--neu-shadow-light),
        inset 1px 1px 2px rgba(255, 255, 255, 0.2),
        0 8px 16px rgba(0, 0, 0, 0.1) !important;
    z-index: 10 !important;
}

/* Enhanced selection states */
.family-chart .person-node.selected,
.family-chart .node.selected {
    box-shadow: 
        inset 8px 8px 16px var(--neu-shadow-dark),
        inset -8px -8px 16px var(--neu-shadow-light),
        0 0 0 3px var(--neu-primary),
        0 0 12px rgba(102, 126, 234, 0.3) !important;
    transform: none !important;
    z-index: 15 !important;
}

/* Active/pressed state */
.family-chart .person-node:active,
.family-chart .node:active {
    transform: translateY(1px) scale(0.98) !important;
    box-shadow: 
        inset 6px 6px 12px var(--neu-shadow-dark),
        inset -6px -6px 12px var(--neu-shadow-light) !important;
    transition: all 0.1s ease !important;
}

/* Focus state for accessibility */
.family-chart .person-node:focus,
.family-chart .node:focus {
    outline: none !important;
    box-shadow: 
        8px 8px 16px var(--neu-shadow-dark),
        -8px -8px 16px var(--neu-shadow-light),
        0 0 0 3px var(--neu-primary),
        0 0 8px rgba(102, 126, 234, 0.4) !important;
}

/* Hover glow effect for gender-specific nodes */
.family-chart .person-node[data-gender="M"]:hover,
.family-chart .node[data-gender="Male"]:hover {
    box-shadow: 
        12px 12px 24px var(--neu-shadow-dark),
        -12px -12px 24px var(--neu-shadow-light),
        0 0 16px rgba(79, 172, 254, 0.2) !important;
}

.family-chart .person-node[data-gender="F"]:hover,
.family-chart .node[data-gender="Female"]:hover {
    box-shadow: 
        12px 12px 24px var(--neu-shadow-dark),
        -12px -12px 24px var(--neu-shadow-light),
        0 0 16px rgba(240, 147, 251, 0.2) !important;
}

/* Enhanced connection lines with better visual hierarchy */
.family-chart .link,
.family-chart path.link,
.family-chart .connection {
    stroke: var(--neu-shadow-dark) !important;
    stroke-width: 3px !important;
    fill: none !important;
    filter: drop-shadow(1px 1px 2px rgba(200, 201, 208, 0.4)) !important;
    opacity: 0.8 !important;
    transition: all 0.3s ease !important;
}

/* Connection line hover effects */
.family-chart .link:hover,
.family-chart path.link:hover {
    stroke: var(--neu-primary) !important;
    stroke-width: 4px !important;
    opacity: 1 !important;
    filter: drop-shadow(0 0 4px rgba(102, 126, 234, 0.3)) !important;
}

/* Different line styles for different relationships */
.family-chart .link.spouse,
.family-chart path.link.spouse {
    stroke: var(--neu-warning) !important;
    stroke-dasharray: 5,5 !important;
    animation: dash 20s linear infinite !important;
}

.family-chart .link.parent,
.family-chart path.link.parent {
    stroke: var(--neu-success) !important;
    stroke-width: 2.5px !important;
}

.family-chart .link.child,
.family-chart path.link.child {
    stroke: var(--neu-secondary) !important;
    stroke-width: 2px !important;
}

@keyframes dash {
    to {
        stroke-dashoffset: -1000;
    }
}

/* Connection endpoints */
.family-chart .link-endpoint {
    fill: var(--neu-primary) !important;
    stroke: var(--neu-surface) !important;
    stroke-width: 2px !important;
    r: 4px !important;
}

/* Chart background */
.family-chart svg {
    background: transparent !important;
}

.family-chart {
    background: transparent !important;
}

/* Enhanced loading indicator with better animations */
.loading-indicator {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: var(--neu-surface);
    padding: 32px;
    border-radius: var(--neu-radius-xl);
    box-shadow: 
        16px 16px 32px var(--neu-shadow-dark),
        -16px -16px 32px var(--neu-shadow-light);
    text-align: center;
    z-index: 1000;
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.1);
}

.loading-spinner {
    width: 50px;
    height: 50px;
    border: 5px solid var(--neu-shadow-light);
    border-top: 5px solid var(--neu-primary);
    border-radius: 50%;
    animation: spin 1s linear infinite, pulse 2s ease-in-out infinite alternate;
    margin: 0 auto 20px;
    position: relative;
}

.loading-spinner::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 20px;
    height: 20px;
    background: var(--neu-primary);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    animation: innerPulse 1.5s ease-in-out infinite;
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

@keyframes pulse {
    0% { box-shadow: 0 0 0 0 rgba(102, 126, 234, 0.4); }
    100% { box-shadow: 0 0 0 20px rgba(102, 126, 234, 0); }
}

@keyframes innerPulse {
    0%, 100% { opacity: 1; transform: translate(-50%, -50%) scale(1); }
    50% { opacity: 0.3; transform: translate(-50%, -50%) scale(0.8); }
}

.loading-content p {
    color: var(--neu-text);
    margin: 0;
    font-weight: 600;
    font-size: 16px;
    text-shadow: 1px 1px 2px rgba(255, 255, 255, 0.8);
    animation: textPulse 2s ease-in-out infinite;
}

@keyframes textPulse {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.7; }
}

/* Network info */
.network-info {
    background: var(--neu-surface);
    padding: 12px 20px;
    border-radius: var(--neu-radius-md);
    box-shadow: var(--neu-shadow-md);
    margin: 16px auto;
    max-width: 1400px;
    text-align: center;
    color: var(--neu-text);
    font-weight: 500;
    text-shadow: var(--neu-text-shadow);
}

/* Chart wrapper - Full width utilization */
.chart-wrapper {
    margin: 0;
    padding: 0 12px;
    max-width: 100%;
    width: 100%;
}

/* Responsive adjustments */
@media (max-width: 768px) {
    .chart-container {
        margin: 16px;
        padding: 16px;
        border-radius: var(--neu-radius-md);
    }
    
    .chart-wrapper {
        padding: 0 16px;
    }
    
    .family-chart .person-node,
    .family-chart .node {
        min-width: 120px !important;
        min-height: 100px !important;
        padding: 12px !important;
    }
    
    .family-chart .person-avatar,
    .family-chart .node img {
        width: 50px !important;
        height: 50px !important;
    }
    
    .family-chart .person-name,
    .family-chart .node .name {
        font-size: 12px !important;
    }
    
    .family-chart .person-details,
    .family-chart .node .details {
        font-size: 10px !important;
    }
}

/* Special node states and indicators */

/* New/Recently added nodes */
.family-chart .person-node.new,
.family-chart .node.new {
    animation: nodeAppear 0.6s ease-out;
    box-shadow: 
        8px 8px 16px var(--neu-shadow-dark),
        -8px -8px 16px var(--neu-shadow-light),
        0 0 20px rgba(67, 233, 123, 0.3) !important;
}

@keyframes nodeAppear {
    0% {
        opacity: 0;
        transform: scale(0.8) translateY(20px);
    }
    50% {
        opacity: 0.8;
        transform: scale(1.05) translateY(-5px);
    }
    100% {
        opacity: 1;
        transform: scale(1) translateY(0);
    }
}

/* Root/Main person indicator */
.family-chart .person-node.root,
.family-chart .node.root {
    border: 3px solid var(--neu-primary) !important;
    box-shadow: 
        8px 8px 16px var(--neu-shadow-dark),
        -8px -8px 16px var(--neu-shadow-light),
        0 0 0 2px var(--neu-primary),
        0 0 24px rgba(102, 126, 234, 0.2) !important;
}

.family-chart .person-node.root::before,
.family-chart .node.root::before {
    content: "ðŸ‘‘";
    position: absolute;
    top: -8px;
    right: -8px;
    font-size: 16px;
    background: var(--neu-primary);
    width: 24px;
    height: 24px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: var(--neu-shadow-sm);
    z-index: 1;
}

/* Loading state for individual nodes */
.family-chart .person-node.loading,
.family-chart .node.loading {
    opacity: 0.6;
    animation: nodeLoading 1.5s ease-in-out infinite;
}

@keyframes nodeLoading {
    0%, 100% { opacity: 0.6; }
    50% { opacity: 0.9; }
}

/* Error state for nodes */
.family-chart .person-node.error,
.family-chart .node.error {
    border-left-color: var(--neu-error) !important;
    box-shadow: 
        8px 8px 16px var(--neu-shadow-dark),
        -8px -8px 16px var(--neu-shadow-light),
        0 0 16px rgba(255, 107, 107, 0.2) !important;
    animation: nodeError 2s ease-in-out;
}

@keyframes nodeError {
    0%, 100% { transform: translateX(0); }
    25% { transform: translateX(-2px); }
    75% { transform: translateX(2px); }
}
